package com.midream.sheep.swcj.core.build.builds.effecient.data;


import com.midream.sheep.swcj.core.build.builds.effecient.pojo.VariableCode;

import java.util.LinkedList;
import java.util.List;

public class CoreTable {
    public final List<VariableCode> Constants = new LinkedList<>();

    public final List<byte[]> methods = new LinkedList<>();
    public CoreTable() {
        fillData();
    }
    private void add(byte[] datas){
        Constants.add(new VariableCode(datas));
    }
    private void fillData(){
        add(new byte[]{
                0x0A, 0x00, 0x05, 0x00, 0x11//java/lang/Object."<init>":()V
        });
        add(new byte[]{
                0x07, 0x00, 0x12//com/midream/sheep/swcj/core/analyzer/CornAnalyzer
        });
        add(new byte[]{
                0x0A, 0x00, 0x02, 0x00, 0x11//com/midream/sheep/swcj/core/analyzer/CornAnalyzer."<init>":()V
        });
        add(new byte[]{
                0x08, 0x00, 0x13//指向第一个执行逻辑 --------------------------------
        });
        add(new byte[]{
                0x07, 0x00, 0x14 // java/lang/Object
        });
        add(new byte[]{
                0x0A, 0x00, 0x02, 0x00, 0x15// com/midream/sheep/swcj/core/analyzer/CornAnalyzer.execute:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
        });
        add(new byte[]{
                0x07, 0x00, 0x16//指向返回值类型
        });
        add(new byte[]{
                0x0B, 0x00, 0x17, 0x00, 0x18// java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
        });
        add(new byte[]{
                0x07,0x00,0x19// 指向返回值类型
        });
        add(new byte[]{
                0x07, 0x00, 0x1A//指向类名
        });
        add(new byte[]{
                0x07, 0x00, 0x1B//指向接口名
        });
        add(new byte[]{
                0x01, 0x00, 0x06, 0x3C, 0x69, 0x6E, 0x69, 0x74, 0x3E// <init>
        });
        add(new byte[]{
                0x01, 0x00, 0x03, 0x28, 0x29, 0x56//()V
        });
        add(new byte[]{
                0x01, 0x00, 0x04, 0x43, 0x6F, 0x64, 0x65//code
        });

        //方法名-->utf
        add(new byte[0]);

        //方法描述符-->utf
        add(new byte[0]);

        add(new byte[]{
                0x0C, 0x00, 0x0C, 0x00, 0x0D//NameAndType    "<init>":()V
        });
        add(new byte[]{
                0x01, 0x00, 0x31, 0x63, 0x6F, 0x6D, 0x2F, 0x6D, 0x69, 0x64, 0x72, 0x65, 0x61, 0x6D, 0x2F, 0x73,
                0x68, 0x65, 0x65, 0x70, 0x2F, 0x73, 0x77, 0x63, 0x6A, 0x2F, 0x63, 0x6F, 0x72, 0x65, 0x2F, 0x61,
                0x6E, 0x61, 0x6C, 0x79, 0x7A, 0x65, 0x72, 0x2F, 0x43, 0x6F, 0x72, 0x6E, 0x41, 0x6E, 0x61, 0x6C,
                0x79, 0x7A, 0x65, 0x72//com/midream/sheep/swcj/core/analyzer/CornAnalyzer
        });
        //执行逻辑--->utf
        add(new byte[0]);

        add(new byte[]{
                0x01, 0x00, 0x10, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x4F, 0x62, 0x6A,
                0x65, 0x63, 0x74//java/lang/Object
        });
        add(new byte[]{
                0x0C, 0x00, 0x1C, 0x00, 0x1D// execute:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
        });
        //返回值 具体--->utf
        add(new byte[0]);

        add(new byte[]{
                0x07, 0x00, 0x1E//List
        });
        add(new byte[]{
                0x0C, 0x00, 0x1F, 0x00, 0x20//toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
        });
        //返回值 数组-->utf
        add(new byte[0]);
        //类名-->utf
        add(new byte[0]);
        //接口名
        add(new byte[0]);

        add(new byte[]{
                0x01, 0x00, 0x07, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65//execute
        });
        add(new byte[]{
                0x01, 0x00, 0x37, 0x28, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F, 0x53,
                0x74, 0x72, 0x69, 0x6E, 0x67, 0x3B, 0x5B, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E,
                0x67, 0x2F, 0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x3B, 0x29, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F,
                0x75, 0x74, 0x69, 0x6C, 0x2F, 0x4C, 0x69, 0x73, 0x74, 0x3B//(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List;
        });
        add(new byte[]{
                0x01, 0x00, 0x0E, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x75, 0x74, 0x69, 0x6C, 0x2F, 0x4C, 0x69, 0x73,
                0x74//java/util/List
        });
        add(new byte[]{
                0x01, 0x00, 0x07, 0x74, 0x6F, 0x41, 0x72, 0x72, 0x61, 0x79//toArray
        });
        add(new byte[]{
                0x01, 0x00, 0x28, 0x28, 0x5B, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C, 0x61, 0x6E, 0x67, 0x2F,
                0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x3B, 0x29, 0x5B, 0x4C, 0x6A, 0x61, 0x76, 0x61, 0x2F, 0x6C,
                0x61, 0x6E, 0x67, 0x2F, 0x4F, 0x62, 0x6A, 0x65, 0x63, 0x74, 0x3B        // ([Ljava/lang/Object;)[Ljava/lang/Object;
        });
    }
}
